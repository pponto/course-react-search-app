{"version":3,"sources":["components/Button/index.js","components/Table/index.js","components/Search/index.js","constants/index.js","components/App/index.js","components/Javascript/index.js","components/Python/index.js","registerServiceWorker.js","index.js"],"names":["Button","_ref","onClick","children","_ref$className","className","react_default","a","createElement","defaultProps","Loading","Sort","_ref2","sortKey","onSort","activeSortKey","sortClass","push","Button_Button","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","Table","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isSortReverse","bind","assertThisInitialized","setState","_this$props","removeItem","_this$state","sortedList","reverseSortedList","Button_Sort","map","item","key","objectID","href","url","title","author","num_comments","points","type","Component","Search","input","focus","onChange","value","onSubmit","FormGroup","style","fontWeight","border","width","ref","myNode","DEFAULT_QUERY","PATH_BASE","PARAM_HPP","concat","console","log","App","results","searchKey","searchTerm","isLoading","searchValue","fetchTopStories","setTopStories","result","hits","page","prevState","oldHits","updatedHits","toConsumableArray","objectSpread","defineProperty","updateTopStories","_this2","fetch","then","response","json","catch","e","event","checkTopStoriesSearchTerm","preventDefault","id","_results$searchKey","updatedList","filter","target","_this3","_this$state2","Container","fluid","Row","components_Search","components_Table","ButtonWithLoading","rest","objectWithoutProperties","Button_Loading","Javascript","Javascript_ButtonWithLoading","withLoading","Python","Python_ButtonWithLoading","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","BrowserRouter","basename","Navbar","Brand","Link","to","Nav","NavItem","NavLink","exact","activeClassName","Route","path","component","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.324aabc6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ onClick, children, className='' }) => \n  <button\n    className={ className }  \n    onClick={ onClick } >\n    { children }\n  </button>\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n}\n\nButton.defaultProps = {\n  className: '',\n}\n\nexport const Loading = () => \n  <div>\n    <h2>Loading...</h2>\n  </div>\n\nexport const Sort = ({ sortKey, onSort, children, className, activeSortKey }) =>\n  {\n    const sortClass = ['btn btn-secondary'];\n    if(sortKey === activeSortKey) {\n      sortClass.push('btn btn-primary');\n    }\n    return (\n      <Button\n        className={ sortClass }\n        onClick={() => onSort(sortKey)}\n      >{ children }</Button>\n    )\n  }","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { sortBy } from 'lodash';\nimport { Button, Sort } from '../Button/index'\n\nconst SORTS = {\n  NONE: list => list,\n  TITLE: list => sortBy(list, 'title'),\n  AUTHOR: list => sortBy(list, 'author'),\n  COMMENTS: list => sortBy(list, 'num_comments').reverse(),\n  POINTS: list => sortBy(list, 'points').reverse(),\n}\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortKey: 'NONE',\n      isSortReverse: false,\n    }\n    this.onSort = this.onSort.bind(this);\n  }\n\n  // sorting function\n  onSort(sortKey) {\n    const isSortReverse = this.state.sortKey === sortKey && !this.state.isSortReverse;\n    this.setState({ sortKey, isSortReverse });\n  }\n\n  render() {\n    const { list, removeItem } = this.props;\n    const { sortKey, isSortReverse } = this.state;\n    const sortedList = SORTS[sortKey](list);\n    const reverseSortedList = isSortReverse ? sortedList.reverse() : sortedList;\n  return(\n      <div className=\"col-sm-10 col-sm-offset-1\">\n\n      <div className=\"text-center\">\n      <hr/>\n      <Sort\n          className=\"btn btn-xs btn-secondary sortBtn\"\n          sortKey={ 'NONE' }\n          onSort={ this.onSort }\n          activeSortKey={ sortKey }\n        >Default</Sort>\n        <Sort\n          className=\"btn btn-xs btn-secondary sortBtn\"\n          sortKey={ 'TITLE' }\n          onSort={ this.onSort }\n          activeSortKey={ sortKey }\n        >Title</Sort>\n        <Sort\n          className=\"btn btn-xs btn-secondary sortBtn\"\n          sortKey={ 'AUTHOR' }\n          onSort={ this.onSort }\n          activeSortKey={ sortKey }\n          >Author</Sort>\n        <Sort\n          className=\"btn btn-xs btn-secondary sortBtn\"\n          sortKey={ 'COMMENTS' }\n          onSort={ this.onSort }\n          activeSortKey={ sortKey }\n          >Comments</Sort>\n        <Sort\n          className=\"btn btn-xs btn-secondary sortBtn\"\n          sortKey={ 'POINTS' }\n          onSort={ this.onSort }\n          activeSortKey={ sortKey }\n          >Points</Sort>\n      <hr/>\n      </div>\n        {\n            // list.filter( isSearched(searchTerm) ).map(item =>\n            reverseSortedList.map(item =>   \n              <div key={ item.objectID }>\n                <h1>\n                  <a href={ item.url }>\n                    { item.title }</a> \n                </h1>\n                <h4>\n\n                  { item.author } | { item.num_comments } Comments | { item.points } Points\n                \n                <Button\n                  className=\"btn btn-xs btn-secondary\"\n                  type=\"button\"\n                  onClick={ () => removeItem(item.objectID) }>\n                    Remove\n                </Button>\n\n                </h4> <hr />\n\n              </div>\n            )\n          }\n      </div>\n    )\n  }\n}\n\nTable.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      objectID: PropTypes.string.isRequired,\n      author: PropTypes.string,\n      url: PropTypes.string,\n      num_comments: PropTypes.number,\n      points: PropTypes.number, \n    })\n  ).isRequired,\n  removeItem: PropTypes.func.isRequired,\n}\n\nexport default Table","import React, { Component } from 'react';\nimport { FormGroup } from 'react-bootstrap';\nimport { Button } from '../Button/index';\n\nclass Search extends Component {\n  componentDidMount(){\n    this.input.focus();\n  }\n  render(){\n  const { onChange, value, children, onSubmit } = this.props;\n  return(\n      <form onSubmit={ onSubmit }>\n      <FormGroup>\n\n        <h1 style={{ fontWeight: 'bold' }}>{ children }</h1> \n        <hr style={{ border: '2px solid black', width: '100px' }} />\n\n        <div className=\"input-group\">\n\n        <input\n          className=\"form-control width100 searchForm\" \n          type=\"text\" \n          onChange={ onChange } \n          value={ value }\n          ref={(myNode) => { this.input = myNode }} \n        />\n\n        <span className=\"input-group-btn\">\n          <Button\n            className=\"btn btn-primary searchBtn\"\n            type=\"submit\"\n          >\n            Search\n          </Button>\n        </span>\n\n        </div>\n\n        </FormGroup>\n      </form>\n    )\n  }\n}\n\nexport default Search","export const DEFAULT_QUERY = 'react';\nexport const DEFAULT_PAGE = 0;\nexport const DEFAULT_HPP = 100;\n\nexport const PATH_BASE = 'https://hn.algolia.com/api/v1';\nexport const PATH_SEARCH = '/search';\nexport const PARAM_SEARCH = 'query=';\nexport const PARAM_PAGE = 'page=';\nexport const PARAM_HPP = 'hitsPerPage=';","import React, { Component } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Table from '../Table/index';\nimport { Button, Loading } from '../Button/index';\nimport Search from '../Search/index';\n\nimport { \n  DEFAULT_QUERY, DEFAULT_PAGE , DEFAULT_HPP, PATH_BASE,\n  PATH_SEARCH, PARAM_SEARCH, PARAM_PAGE, PARAM_HPP\n} from '../../constants/index';\n\nconst url = `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${DEFAULT_QUERY}\n            &${PARAM_PAGE}&${PARAM_HPP}${DEFAULT_HPP}`;\nconsole.log(url);\n\n// higher order component\nconst withLoading = (Component) => ({isLoading, ...rest}) =>\n  isLoading ? <Loading /> : <Component {...rest}/>\n\nconst updateTopStories = (hits, page) => prevState => {\n  const { searchKey, results } = prevState;\n\n  const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\n\n  const updatedHits = [...oldHits, ...hits];\n\n  return { results: { ...results, [searchKey]: {hits: updatedHits, page}},\n    isLoading: false\n  }\n}\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    // setting up state\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: DEFAULT_QUERY,\n      isLoading: false,\n    }\n\n    // bind the functions to this (app component)\n    this.removeItem = this.removeItem.bind(this);\n    this.searchValue = this.searchValue.bind(this);\n    this.fetchTopStories = this.fetchTopStories.bind(this);\n    this.setTopStories = this.setTopStories.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // check top stories search term\n  checkTopStoriesSearchTerm(searchTerm){\n    return !this.state.results[searchTerm];\n  }\n\n  // set top stories\n  setTopStories(result){\n    // get the hits ang page from result\n    const { hits, page } = result;\n    \n    this.setState(updateTopStories(hits, page));\n  }\n\n  // fetch top stories\n  fetchTopStories(searchTerm, page){\n\n    this.setState({ isLoading: true });\n\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}\n      &${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\n      .then(response => response.json())\n      .then(result => this.setTopStories(result))\n      .catch(e => e);\n  }\n\n  // component did mount\n  componentDidMount() {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    this.fetchTopStories(searchTerm, DEFAULT_PAGE);\n  }\n\n  // on search submit function\n  onSubmit(event){\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n\n    if (this.checkTopStoriesSearchTerm(searchTerm)) {\n      this.fetchTopStories(this.state.searchTerm, DEFAULT_PAGE);\n    }\n\n    event.preventDefault();\n  }\n\n \n // lets rewrite removeItem function in ES6\n removeItem(id){\n  const { results, searchKey } = this.state;\n  const { hits, page } = results[searchKey];\n  // const isNotId = item => item.objectID !== id;\n  const updatedList = hits.filter(item => item.objectID !== id);\n  // this.setState({ result: Object.assign({}, this.state.result, {hits: updatedList}) });\n  this.setState({ results: {...results, [searchKey]: {hits: updatedList, page}} });\n }\n\n // get input field value from search form\n searchValue(event){\n  // console.log(event)\n  this.setState({ searchTerm: event.target.value });\n }\n\n  render() {\n\n    const { results, searchTerm, searchKey, isLoading } = this.state;\n\n    const page = (results && results[searchKey] && results[searchKey].page) || 0;\n    const list = (results && results[searchKey] && results[searchKey].hits) || [];\n\n    console.log(this);\n\n    return (\n      <div>\n\n        <Container fluid>\n          <Row>\n            <div className=\"jumbotron text-center\">\n\n            <Search\n              onChange={ this.searchValue } \n              value={ searchTerm }\n              onSubmit={ this.onSubmit }\n            >NEWSAPP</Search>\n\n            </div>\n          </Row>\n        </Container>\n\n        <Container>\n          <Row>\n            <Table \n              list={ list }              \n              removeItem={ this.removeItem }\n            />\n          \n\n          <div className=\"text-center alert\">\n\n              <ButtonWithLoading\n                isLoading = {isLoading}\n                className=\"btn btn-success\"\n                onClick={ () => this.fetchTopStories(searchTerm, page + 1) }>\n                Load more\n              </ButtonWithLoading>\n\n          </div>\n        </Row>\n      </Container>\n\n      </div>\n    );\n  }\n}\n\nconst ButtonWithLoading = withLoading(Button);\n\nexport default App;","import React, { Component } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Table from '../Table/index';\nimport { Button, Loading } from '../Button/index';\nimport Search from '../Search/index';\n\nimport { \n  DEFAULT_QUERY, DEFAULT_PAGE , DEFAULT_HPP, PATH_BASE,\n  PATH_SEARCH, PARAM_SEARCH, PARAM_PAGE, PARAM_HPP\n} from '../../constants/index';\n\nconst url = `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${DEFAULT_QUERY}\n            &${PARAM_PAGE}&${PARAM_HPP}${DEFAULT_HPP}`;\nconsole.log(url);\n\n// higher order component\nconst withLoading = (Component) => ({isLoading, ...rest}) =>\n  isLoading ? <Loading /> : <Component {...rest}/>\n\nconst updateTopStories = (hits, page) => prevState => {\n  const { searchKey, results } = prevState;\n\n  const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\n\n  const updatedHits = [...oldHits, ...hits];\n\n  return { results: { ...results, [searchKey]: {hits: updatedHits, page}},\n    isLoading: false\n  }\n}\n\nclass Javascript extends Component {\n  constructor(props){\n    super(props);\n\n    // setting up state\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: 'javascript',\n      isLoading: false,\n    }\n\n    // bind the functions to this (app component)\n    this.removeItem = this.removeItem.bind(this);\n    this.searchValue = this.searchValue.bind(this);\n    this.fetchTopStories = this.fetchTopStories.bind(this);\n    this.setTopStories = this.setTopStories.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // check top stories search term\n  checkTopStoriesSearchTerm(searchTerm){\n    return !this.state.results[searchTerm];\n  }\n\n  // set top stories\n  setTopStories(result){\n    // get the hits ang page from result\n    const { hits, page } = result;\n    \n    this.setState(updateTopStories(hits, page));\n  }\n\n  // fetch top stories\n  fetchTopStories(searchTerm, page){\n\n    this.setState({ isLoading: true });\n\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}\n      &${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\n      .then(response => response.json())\n      .then(result => this.setTopStories(result))\n      .catch(e => e);\n  }\n\n  // component did mount\n  componentDidMount() {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    this.fetchTopStories(searchTerm, DEFAULT_PAGE);\n  }\n\n  // on search submit function\n  onSubmit(event){\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n\n    if (this.checkTopStoriesSearchTerm(searchTerm)) {\n      this.fetchTopStories(this.state.searchTerm, DEFAULT_PAGE);\n    }\n\n    event.preventDefault();\n  }\n\n \n // lets rewrite removeItem function in ES6\n removeItem(id){\n  const { results, searchKey } = this.state;\n  const { hits, page } = results[searchKey];\n  // const isNotId = item => item.objectID !== id;\n  const updatedList = hits.filter(item => item.objectID !== id);\n  // this.setState({ result: Object.assign({}, this.state.result, {hits: updatedList}) });\n  this.setState({ results: {...results, [searchKey]: {hits: updatedList, page}} });\n }\n\n // get input field value from search form\n searchValue(event){\n  // console.log(event)\n  this.setState({ searchTerm: event.target.value });\n }\n\n  render() {\n\n    const { results, searchTerm, searchKey, isLoading } = this.state;\n\n    const page = (results && results[searchKey] && results[searchKey].page) || 0;\n    const list = (results && results[searchKey] && results[searchKey].hits) || [];\n\n    console.log(this);\n\n    return (\n      <div>\n\n        <Container>\n          <Row>\n            <Table \n              list={ list }              \n              removeItem={ this.removeItem }\n            />\n          \n\n          <div className=\"text-center alert\">\n\n              <ButtonWithLoading\n                isLoading = {isLoading}\n                className=\"btn btn-success\"\n                onClick={ () => this.fetchTopStories(searchTerm, page + 1) }>\n                Load more\n              </ButtonWithLoading>\n\n          </div>\n        </Row>\n      </Container>\n\n      </div>\n    );\n  }\n}\n\nconst ButtonWithLoading = withLoading(Button);\n\nexport default Javascript;","import React, { Component } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport Table from '../Table/index';\nimport { Button, Loading } from '../Button/index';\nimport Search from '../Search/index';\n\nimport { \n  DEFAULT_QUERY, DEFAULT_PAGE , DEFAULT_HPP, PATH_BASE,\n  PATH_SEARCH, PARAM_SEARCH, PARAM_PAGE, PARAM_HPP\n} from '../../constants/index';\n\nconst url = `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${DEFAULT_QUERY}\n            &${PARAM_PAGE}&${PARAM_HPP}${DEFAULT_HPP}`;\nconsole.log(url);\n\n// higher order component\nconst withLoading = (Component) => ({isLoading, ...rest}) =>\n  isLoading ? <Loading /> : <Component {...rest}/>\n\nconst updateTopStories = (hits, page) => prevState => {\n  const { searchKey, results } = prevState;\n\n  const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\n\n  const updatedHits = [...oldHits, ...hits];\n\n  return { results: { ...results, [searchKey]: {hits: updatedHits, page}},\n    isLoading: false\n  }\n}\n\nclass Python extends Component {\n  constructor(props){\n    super(props);\n\n    // setting up state\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: 'python',\n      isLoading: false,\n    }\n\n    // bind the functions to this (app component)\n    this.removeItem = this.removeItem.bind(this);\n    this.searchValue = this.searchValue.bind(this);\n    this.fetchTopStories = this.fetchTopStories.bind(this);\n    this.setTopStories = this.setTopStories.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // check top stories search term\n  checkTopStoriesSearchTerm(searchTerm){\n    return !this.state.results[searchTerm];\n  }\n\n  // set top stories\n  setTopStories(result){\n    // get the hits ang page from result\n    const { hits, page } = result;\n    \n    this.setState(updateTopStories(hits, page));\n  }\n\n  // fetch top stories\n  fetchTopStories(searchTerm, page){\n\n    this.setState({ isLoading: true });\n\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}\n      &${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\n      .then(response => response.json())\n      .then(result => this.setTopStories(result))\n      .catch(e => e);\n  }\n\n  // component did mount\n  componentDidMount() {\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    this.fetchTopStories(searchTerm, DEFAULT_PAGE);\n  }\n\n  // on search submit function\n  onSubmit(event){\n    const { searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n\n    if (this.checkTopStoriesSearchTerm(searchTerm)) {\n      this.fetchTopStories(this.state.searchTerm, DEFAULT_PAGE);\n    }\n\n    event.preventDefault();\n  }\n\n \n // lets rewrite removeItem function in ES6\n removeItem(id){\n  const { results, searchKey } = this.state;\n  const { hits, page } = results[searchKey];\n  // const isNotId = item => item.objectID !== id;\n  const updatedList = hits.filter(item => item.objectID !== id);\n  // this.setState({ result: Object.assign({}, this.state.result, {hits: updatedList}) });\n  this.setState({ results: {...results, [searchKey]: {hits: updatedList, page}} });\n }\n\n // get input field value from search form\n searchValue(event){\n  // console.log(event)\n  this.setState({ searchTerm: event.target.value });\n }\n\n  render() {\n\n    const { results, searchTerm, searchKey, isLoading } = this.state;\n\n    const page = (results && results[searchKey] && results[searchKey].page) || 0;\n    const list = (results && results[searchKey] && results[searchKey].hits) || [];\n\n    console.log(this);\n\n    return (\n      <div>\n\n        <Container>\n          <Row>\n            <Table \n              list={ list }              \n              removeItem={ this.removeItem }\n            />\n          \n\n          <div className=\"text-center alert\">\n\n              <ButtonWithLoading\n                isLoading = {isLoading}\n                className=\"btn btn-success\"\n                onClick={ () => this.fetchTopStories(searchTerm, page + 1) }>\n                Load more\n              </ButtonWithLoading>\n\n          </div>\n        </Row>\n      </Container>\n\n      </div>\n    );\n  }\n}\n\nconst ButtonWithLoading = withLoading(Button);\n\nexport default Python;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport Javascript from './components/Javascript';\nimport Python from './components/Python';\nimport { BrowserRouter as Router, Route, Link, NavLink } from 'react-router-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\n\n\nconst Root = () => \n  <Router basename=\"/course-react-search-app/\">\n    <div>\n      <Navbar>\n        <Navbar.Brand>\n          <Link to='/'>NEWSAPP</Link>\n        </Navbar.Brand>\n\n        <Nav>\n          <NavItem>\n            <Nav.Link>\n              <NavLink exact to=\"/\" activeClassName=\"active\">Home</NavLink>\n            </Nav.Link>\n          </NavItem>\n          <NavItem>\n            <Nav.Link>\n              <NavLink to=\"/javascript\" activeClassName=\"active\">Javascript</NavLink>\n            </Nav.Link>\n          </NavItem>\n          <NavItem>\n            <Nav.Link>\n              <NavLink to=\"/python\" activeClassName=\"active\">Python</NavLink>\n            </Nav.Link>\n          </NavItem>\n        </Nav>\n\n      </Navbar>\n\n      <Route exact path='/' component={ App } />\n      <Route exact path='/javascript' component={ Javascript } />\n      <Route exact path='/python' component={ Python } />\n    </div>\n  </Router>\n\nReactDOM.render(<Root />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}